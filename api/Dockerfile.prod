# Use a lightweight Node.js image for production
FROM node:20.18.0-alpine AS build

# Set the working directory
WORKDIR /app

# Copy package.json and yarn.lock
COPY package*.json ./

# Install dependencies (including dev dependencies for build)
RUN yarn install

# Copy the rest of the application code
COPY . .

# Build the application (if needed)
RUN yarn build

# Use a minimal image for the final stage
FROM node:20.18.0-alpine

# Set the working directory for the final image
WORKDIR /app

# Copy the built application from the build stage
COPY --from=build /app/dist ./dist 
# COPY .env .env - loading from docker compose
COPY ./migrations ./migrations
# Copy package.json and yarn.lock to install production dependencies
COPY package*.json ./

# Install production dependencies only
RUN yarn install --production
EXPOSE 8080

# Start the application in production mode
CMD ["node", "dist/server.js"]
